{"version":3,"sources":["FormattedDate.js","WeatherIcon.js","WeatherTemperature.js","WeatherInfo.js","WeatherForecastDay.js","WeatherForecast.js","Weather.js","App.js","index.js"],"names":["FormattedDate","props","day","date","getDay","hours","getHours","minutes","getMinutes","WeatherIcon","icon","code","color","size","animate","WeatherTemperature","className","Math","round","celsius","WeatherInfo","data","city","description","temperature","humidity","wind","WeatherForecastDay","Date","dt","weather","temp","max","maxTemperature","min","minTemperature","WeatherForecast","useState","loaded","setLoaded","forecast","setForecast","handleResponse","response","daily","useEffect","coordinates","map","dailyForecast","index","longitude","lon","latitude","lat","apiUrl","axios","get","then","load","Weather","ready","weatherData","setWeatherData","defaultCity","setCity","coord","main","speed","name","search","onSubmit","event","preventDefault","type","placeholder","autoFocus","onChange","target","value","App","href","rel","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.f46aaa3d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FormattedDate(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  let day = days[props.date.getDay()];\n  let hours = props.date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return (\n    <div>\n      {day} {hours}:{minutes}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nexport default function WeatherIcon(props) {\n  const codeMapping = {\n    \"01d\": \"CLEAR_DAY\",\n    \"01n\": \"CLEAR_NIGHT\",\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\n    \"02n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"03d\": \"PARTLY_CLOUDY_DAY\",\n    \"03n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"04d\": \"CLOUDY\",\n    \"04n\": \"CLOUDY\",\n    \"09d\": \"RAIN\",\n    \"09n\": \"RAIN\",\n    \"10d\": \"RAIN\",\n    \"10n\": \"RAIN\",\n    \"11d\": \"RAIN\",\n    \"11n\": \"RAIN\",\n    \"13d\": \"SNOW\",\n    \"13n\": \"SNOW\",\n    \"50d\": \"FOG\",\n    \"50n\": \"FOG\"\n  };\n\n  return (\n    <ReactAnimatedWeather\n      icon={codeMapping[props.code]}\n      color=\"#1e1e1e\"\n      size={props.size}\n      animate={true}\n    />\n  );\n}\n","import React from \"react\";\n\nexport default function WeatherTemperature(props) {\n  return (\n    <div className=\"WeatherTemperature\">\n      <span className=\"temperature\">{Math.round(props.celsius)}</span>\n      <span className=\"unit\">°C</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport WeatherTemperature from \"./WeatherTemperature\";\n\nexport default function WeatherInfo(props) {\n  return (\n    <div className=\"WeatherInfo\">\n      <h1>{props.data.city}</h1>\n      <ul>\n        <li>\n          <FormattedDate date={props.data.date} />\n        </li>\n        <li className=\"text-capitalize\">{props.data.description}</li>\n      </ul>\n      <div className=\"row mt-3\">\n        <div className=\"col-6\">\n          <div className=\"clearfix\">\n            <div className=\"float-left\">\n              <WeatherIcon code={props.data.icon} size={52} />\n            </div>\n\n            <div className=\"float-left\">\n              <WeatherTemperature celsius={props.data.temperature} />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <ul>\n            <li>Humidity: {props.data.humidity}%</li>\n            <li>Wind: {props.data.wind} km/h</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nexport default function WeatherForecastDay(props) {\n  function maxTemperature() {\n    let temperature = Math.round(props.data.temp.max);\n    return `${temperature}°`;\n  }\n\n  function minTemperature() {\n    let temperature = Math.round(props.data.temp.min);\n    return `${temperature}°`;\n  }\n\n  function day() {\n    let date = new Date(props.data.dt * 1000);\n    let day = date.getDay();\n\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n    return days[day];\n  }\n\n  return (\n    <div>\n      <div className=\"WeatherForecast-day\">{day()}</div>\n      <WeatherIcon code={props.data.weather[0].icon} size={36} />\n      <div className=\"WeatherForecast-temperatures\">\n        <span className=\"WeatherForecast-temperature-max\">\n          {maxTemperature()}\n        </span>\n        <span className=\"WeatherForecast-temperature-min\">\n          {minTemperature()}\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let apiKey = \"145c5d45ac0a0eddce2e037abca32a35\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <WeatherForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    load();\n\n    return null;\n  }\n}\n","import React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      wind: response.data.wind.speed,\n      city: response.data.name\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"145c5d45ac0a0eddce2e037abca32a35\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city..\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n        <WeatherInfo data={weatherData} />\n        <WeatherForecast coordinates={weatherData.coordinates} />\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n","import React from \"react\";\nimport Weather from \"./Weather\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Weather defaultCity=\"New York\" />\n\n        <footer>\n          This project was coded by Diana Jethwa\n          <a\n            href=\"https://github.com/dianaJ1/react-weather-app1.git\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            open-sourced on GitHub\n          </a>{\" \"}\n          and{\" \"}\n          <a\n            href=\"https://csb-zv42vq.netlify.app/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            hosted on Netlify\n          </a>\n        </footer>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}